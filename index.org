#+TITLE: Python for early children

#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js@3.9.0

#+REVEAL_EXTERNAL_PLUGIN: ( chalkboard menu )
#+REVEAL_EXTRA_CSS: ./mystyle.css
#+ATTR_ORG: :width 200/250/300/400/500/600
#+ATTR_LATEX: :width 2.0in
#+ATTR_HTML: :width 200/250/300/400/500/600px
#+REVEAL_TITLE_SLIDE: <h2>%t</h2><h3>%s</h3><p>%A %a</p><p><a href="%u">%u</a></p>
#+REVEAL_THEME: moon
# ./assets/stars.jpg
#+REVEAL_TITLE_SLIDE_BACKGROUND: https://images.freeimages.com/images/large-previews/f0d/night-sky-1401615.jpg
#+Subtitle: Getting started
#+Author: laurent
#+Email: laurent_pinson@hotmail.com
#+REVEAL_TALK_URL: https://laurenthyz.github.io/rachel/index.html
# * Our First lesson
# ** Proper set-up before the class
#    :PROPERTIES:
#    :UNNUMBERED: notoc
#    :END:
# - Open your web.wechat window
# - open your meet room https://meet.jit.si/jasonchengyu
#   共享电脑摄像头和麦克风两种方法（1-接受网页自动发放的共享提示 2-登上meet.jit.si后共享资源）
#   截图
# - put your headset and mic on, make sure both are working properly

# ** Things Jason likes:
#    :PROPERTIES:
#    :UNNUMBERED: notoc
#    :END:
# - Sausage Man (香肠派对), a battle royale game stylized to the likenings of Fortnite and PUBG (PlayerUnknown's BattleGrounds ).
# - Super Mario Bros
# - Drawing
# ** Jason & programming
#    :PROPERTIES:
#    :UNNUMBERED: notoc
#    :END:
# - Wants to learn programming in order to write game and make lots of money :)
# - After our python introduction in Phuket, Jason went on to learn through 核桃编程 www.hetao101.com
# - Through 核桃编程Jason focused mainly on Scratch coding coding ( and that's good )
#   - For reference, here is the standard progression from hetao101.com

#         https://img.hetao101.com/assets/pc/landing3.0/jieduan.png
# ** STORE and PROCESS
#    :PROPERTIES:
#    :UNNUMBERED: notoc
#    :END:
# *** Restaurants STORE and PROCESS food.
# Restaurants must be able to STORE food & PROCESS/COOK it.
# A storage space full of food is not a restaurant.
# A cook and his knives alone is not a restaurant.
# A skilled cook with access to food storage? Now we are talking!
# *** Computers are machines that STORE information and PROCESS that information
# Essentially a computer is a machine that can STORE and PROCESS information.
# Based on that definition & the things we discussed, please draw a computer
# #+BEGIN_EXPORT html

# <iframe width="100%" height="650px" src="https://awwapp.com/b/u4r84anbireo8/"></iframe>
# #+END_EXPORT

# *** Computers are everywhere!
# Ask the adults around you:
# - "Dad, do you think that phones are computers? "
# - "Mum, do you think that a TESLA car is a computer?"
# - "Teacher is your Huawei's watch a computer too?"
# Try to help them answer the question just like we did during the class.
# *** Computers are powerful... but their Machine Language is too difficult
#  - They only understand Machine Language
#    (typically binaries, /i.e./ a bunch of 0 and 1)
#  - MACHINE LANGUAGE is impractical for HUMANS to learn, MACHINE CODE is not humanly readable!

# *** Update your big picture!

# #+BEGIN_EXPORT html

# <iframe width="100%" height="650px" src="https://awwapp.com/b/u4r84anbireo8/"></iframe>

# #+END_EXPORT
# ** Fortunately we have many super heroes that speak ML
#    :PROPERTIES:
#    :UNNUMBERED: notoc
#    :END:
# - Those super-heroes are : C, C#, C++, Java, Python, Java-script etc...
# - You can call those super-heroes and invite them onto your computer
# - Provided we speak their language we can ask those super-heroes anything!

# ** Update your big picture!
#    :PROPERTIES:
#    :UNNUMBERED: notoc
#    :END:
# #+BEGIN_EXPORT html

# <iframe width="100%" height="650px" src="https://awwapp.com/b/u4r84anbireo8/"></iframe>

# #+END_EXPORT

# ** Spoiled for choice, which super-hero will you pick?
#    :PROPERTIES:
#    :UNNUMBERED: notoc
#    :END:
# Which super-hero will you pick to control your computer?
#  Will you pick the fastest (C)? Will you pick the cutest (Scratch)? Will you pic the most popular (Python)?
#  It is not an easy question, and it does depend on your age and experience...
# ** Let's pick Python as our first language
#    :PROPERTIES:
#    :UNNUMBERED: notoc
#    :END:
# - Easy to learn, open-source, powerful and popular across researchers...Python rocks!
# - Learning Python basics properly and without rushing will greatly increase your ability to learn the second one (In Mainland China that second language is typically C++)

# ** Update your big picture!
#    :PROPERTIES:
#    :UNNUMBERED: notoc
#    :END:
# #+BEGIN_EXPORT html

# <iframe width="100%" height="650px" src="https://awwapp.com/b/u4r84anbireo8/"></iframe>

# #+END_EXPORT

# ** Next class we write hello.py
#    :PROPERTIES:
#    :UNNUMBERED: notoc
#    :END:
# - From that moment on Python will be your main partner
# - Your focus will be to:
#     - learn Python's grammar and vocabulary
#     - write correct sentences with clear commands
# Next class we will write a simple hello.py to our beloved Python super-hero.

# ** Update your big picture!
#    :PROPERTIES:
#    :UNNUMBERED: notoc
#    :END:
# Ok let's wrap up this lesson review.
# Please redraw your Big Picture from scratch
# #+BEGIN_EXPORT html
# <iframe width="100%" height="650px" src="https://awwapp.com/b/u7jfmkhitu47y/"></iframe>
# #+END_EXPORT

# * New Vocabulary
# ** Vocabulary to include in your BP
# 根据今天的反馈jason要用房间里的白板画出他脑海里的python big picture
# (要包含以下几项:
# |-------------------------+--------------------------|
# | python 英雄             | computer 电脑            |
# | Store 存储              | Process 处理             |
# | ML 机器语言             | Jason 编程人员           |
# | Envelope 信封           | Letter (信封里的信)      |
# | StandardInput 标准输入  | python's left hand       |
# | python's right hand     | Standard Output 标准输出 |
# | Standard Error 标准错误 | print/say(显示)          |
# | return(返回)            |                          |
# |-------------------------+--------------------------|
# ** 从scratch迈向Python?
# I can know that Jason has studied some Scratch. Hopefully he is able to take what he learned there into python. Here is a picture that shows the similarities between both languages:
#  #+REVEAL: split
# [[./assets/scratchtopython.png]]
# * Data types
# ** python data types 数据类别：
# Please put the following items within you BP
#   - boolean
#   - string (字符串）
#   - integer整数
#   - float 浮点数
#   - list列表
#   - dictionaries

# #+REVEAL: split
# Attention: 重点在string, integer and float
#    Jason should add his hello.py to his big picture
#    making sure he uses variable declaration.
#    他要把他的hello.py 也画进去。
#     hello.py 文件里面不要乱用双引号和括号！

# * 从Scratch 迈向 python!
# Jason, after our 2nd lesson I asked  you and your parents how long and far you had been with Scratch. I think it is worth for you to try and connect what we do with scratch, so I have found some picture that illustrate how both languages do the same thing. I hope it helps.
# ** input 输入
# 图左是 Scratch 的表达方式, 图右是 Python 的语法。在 Scratch 中提问的结果会放入「答案」这个变数, Python 可以使用 input() 达>
# [[./assets/input.png]]
# ** output 输出
# 图左是 Scratch 的表达方式, 图右是 Python 的语法。
# [[./assets/output.png]]
# ** arithmetic operations 数学运算
# 图左是 Scratch 的表达方式, 图右是 Python 的语法。
# [[./assets/math.png]]

# ** string operations 字串运算
# 图左是 Scratch 的表达方式, 图右是 Python 的语法。
# [[./assets/string.png]]
# ** comparison and logical operations 字串运算
# 图左是 Scratch 的表达方式, 图右是 Python 的语法。
# [[./assets/logic.png]]

# ** advanced math 进阶数学运算
# 图左是 Scratch 的表达方式, 图右是 Python 的语法。
# [[./assets/math2.png]]

# ** loop 回圈
# 图左是 Scratch 的表达方式, 图右是 Python 的语法。
# [[./assets/loop.png]]

# ** increment 变数
# 图左是 Scratch 的表达方式, 图右是 Python 的语法。 Python 可以使用中文「分数」当作变数名称。
# [[./assets/increment.png]]

# ** list 列表
# 图左是 Scratch 的表达方式, 图右是 Python 的语法。 Python 可以使用中文「清单」当作变数名称。
# [[./assets/list.png]]
# *  Comments/variables/input
# ** Comments/注释
# Comments are section of your code that will not be executed by Python, they are typically there to explain what is happening (useful when you work with others).
# 确保对模块, 函数, 方法和行内注释使用正确的风格
# Python中的注释有单行注释和多行注释.
# Python中单行注释以 # 开头，例如：
# #+BEGIN_SRC python
# # the following code is a print statement
# print("Hello World, my name is Jason!")
# #+END_SRC


# #+REVEAL: split
# 多行注释如下：
# #+BEGIN_SRC python
# '''
# The code below is a simple print statement.
# I am giving python a string of characters,
# and I ask python to send it (to print it, to display it)
# onto the standard output (typically the standard output is
# the screen)
# '''
# print("Hello World, my name is Jason and I am a coder")
# #+END_SRC
# ** Creating variables
# We talked about variables already. I said that variables are like labeled/named boxes that contain data.
# check the code below, and guess what python will do when it read it line by line:
# #+BEGIN_SRC python
# jason_age = 10
# jason_best_friend = "Milo"
# jason_birth_year = 2020 - jason_age
# print(jason_age)
# print(jason_best_friend)
# print(jason_birth_year)
# #+END_SRC
# ** Use variables as much as you can
# Within the section about comments we asked python to print "Hello World, my name is...".
# Although it is correct, each time we can put data in a box and give that box a name we should do it...so let's do it!
# #+BEGIN_SRC python
# hello = "Hello World, my name is Jason and I am coder".
# byebye = "It was a pleasure to meet you, see you soon"
# print(hello)
# print(byebye)
# #+END_SRC
# ** Wrap up and homework
# Here is the code we looked at during the class.
# You asked me:
# - "why are we using a 'f' ?"
# - "what is the empty []?"
# - "Line 19 and 23 why are we using 2 pairs of parentheses/parens?"
# We will solve all those mysteries but for now please read the code below outloud, look at the different colors, and commit line 13,15 and 17 to memory (write those 3 lines 20 times!

# #+REVEAL: split
# [[./assets/restaurant.png]]

# * VLive Share, review and if/elif/else
# ** 笔记更新
# 我的笔记以后就放在以下链路：
# - [[https://laurenthyz.github.io/jason/blue.html][酷酷 This blue-background version with arrow/swipe navigation]]
# - [[https://laurenthyz.github.io/jason/white.html][传统 This white-background, traditional article-style webpage]]
# ** Vocabulary review
# We reviewed lesson 2:
# |-------------------------+--------------------------|
# | python 英雄             | computer 电脑            |
# | Store 存储              | Process 处理             |
# | ML 机器语言             | Jason 编程人员           |
# | Envelope 信封           | Letter (信封里的信)      |
# | StandardInput 标准输入  | python's left hand       |
# | python's right hand     | Standard Output 标准输出 |
# | Standard Error 标准错误 | print/say(显示)          |
# | return(返回)            |                          |
# |-------------------------+--------------------------|
#  #+REVEAL: split
# Jason you need to be able to draw your BP with all those components in it. Standard Input is the stream that brings instructions to python. Note that data coming from the keyboard, data coming from sensors (传感器)and commands contained in your hello.py file are all reaching the computer through this input stream.
# Note that whenever you are sending instructions to Python, he will either:
# - implement the storage and process commands internally in the computer
# - display something to the STDOUT (the screen) if you asked him to
# - return something to you if you wrote the relevant return function
# - ...and if at any point he is unable to perform he will send an error traceback to the Stand Error stream.
# ** Scratch to Python review
# We reviewed and explained how Scratch and Python do the following:
# |----------------------------------------------------+-------------------------------+----------------------------|
# |                                                    | Scratch                       | Python                     |
# | ask something from the user                        | ask & set                     | input                      |
# |                                                    | (提问 并等待答案)             |                            |
# |----------------------------------------------------+-------------------------------+----------------------------|
# | tell something to the user                         | say                           | print                      |
# | conditional execution                              | if else                       | if elif elif else          |
# | storing data in box                                | set a to hello                | a = "hello"                |
# | incrementing                                       | change x by 1/ 增加 1         | a = a + 1                  |
# | add element to a list                              | add milo to friend_list       | friend_list.append("milo") |
# | delete an element from a list                      | delete 1 of friend_list       | friend_list.pop()          |
# | loops                                              |                               |                            |
# | adding/gluing items into a named box               | set g to join hi + there      | g = "hi" + "there"         |
# |                                                    | （合并 hi 和 there            |                            |
# |----------------------------------------------------+-------------------------------+----------------------------|
# |----------------------------------------------------+-------------------------------+----------------------------|
#  #+REVEAL: split
# |                                                                    |                               |                            |
# | a and b are equal                                  | a = b                         | a == b                     |
# | a is greater than b                                | a > b                         | a > b                      |
# | a is lesser than                                   | a < b                         | a < b                      |
# | both 条件1 and 条件2 are satisfied then we act     | 条件1 且 条件2                | 条件1 and 条件2            |
# | if 条件1 or 条件2  are satisfied then we act       | 条件1 或 条件2                | 条件1 or 条件2             |
# | if 条件1 is not satisfied then we act              | 条件1 不成立的话              | not 条件1                  |
# |----------------------------------------------------+-------------------------------+----------------------------|
# |----------------------------------------------------+-------------------------------+----------------------------|
# | the absolute value of 9                            | 绝对值 of 9                   | abs(9)                     |
# | square root of 9                                   | 平方根 of 9                   | import math   math.sqrt(9) |
# |----------------------------------------------------+-------------------------------+----------------------------|
#  #+REVEAL: split
# | loop 回圈                                          |                               |                            |
# | do something 10 times                              | repeat 10                     | for i in range(10)         |
# | do something once 条件1 is satisfied               | 等待条件一                    | while not 条件一：    pass |
# | do something until something happens               | repeat until money = 0        | while money > 0            |
# | do action_a forever                                | forever do action_a 重复执行  | while True: action_a       |
# |                                                    |                               |                            |
# | if 条件1 is met, then do something                 |                               |                            |
# | if 条件1 is true do action 1, otherwise do action2 |                               |                            |
# |                                                    |                               |                            |
# |                                                    |                               |                            |
# |                                                    |                               |                            |
# |----------------------------------------------------+-------------------------------+----------------------------|
#  #+REVEAL: split
# | number                                             |                               |                            |
# | we introduce a counter variable and set it to 0    | 分数                          | 分数 = 0                   |
# |                                                    | set 分数 to 0                 |                            |
# |                                                    | （将变量 分数 的 值设定为 0） |                            |
# | we increment our counter by 1                      | change 分数 by 1              | 分数 = 分数 + 1            |
# | we set the counter to 0                            |                               |                            |
# |----------------------------------------------------+-------------------------------+----------------------------|
# | list 列表                                          |                               |                            |
# | add item to the list                               |                               |                            |
# | insert item in the list                            |                               |                            |
# | delete item using its rank in the list             |                               |                            |
# | we can check whether an item is in the list        |                               |                            |
# | we can know how many items are in the list         |                               |                            |
# | we can obtain the last item in the list            |                               |                            |
# |                                                    |                               |                            |
# ** if elif else
# We spent some time talking about this picture:
# [[./assets/loop.png]]
# Let me show you an example where you see if, elif and else applied.
#  #+REVEAL: split
# #+BEGIN_SRC python
# num = 1122
# if 9 < num < 99:
#     print("Two digit number")
# elif 99 < num < 999:
#     print("Three digit number")
# elif 999 < num < 9999:
#     print("Four digit number")
# else:
#     print("number is <= 9 or >= 9999")
# #+END_SRC
#  #+REVEAL: split
# You can distinguish the following core structure:
# #+BEGIN_SRC python
# if condition_1:
#    block_of_code_1
# elif condition_2:
#    block_of_code_2
# elif condition_3:
#    block_of_code_3
# ..
# ..
# ..
# else:
#   block_of_code_n
# #
# # 1. There can be multiple ‘elif’ blocks, however there is only ‘else’ block is allowed.
# # 2. Out of all these blocks only one block_of_code gets executed. If the condition is true then the code inside ‘if’ # gets executed, if condition is false then the next condition(associated with elif) is evaluated and so on. If none # of the conditions is true then the code inside ‘else’ gets executed.
# #+END_SRC
# ** 实时协作编程安装
#  - [[https://www.loom.com/share/b32958dc87f448ccb5ce9b9b04f7dd6c][Video-guide to installing Live Share]]
#  - Make sure you install python 3 on your computer:
#    - access your terminal 在系统桌面右上角有一个“放大镜”。点击“放大镜”，在这个对话框内搜索“终端”，点击回车就可以了.
# - when in your terminal 请输入python --version后点击回车，照一下。然后请输入python3 --version后点击回车，照一下。
#   如果python 3 没有安装的话那么根据[[https://v.qq.com/x/page/x30436josgj.html][此中文视频来安装。]]
# * Stream, Indentation, statements (simple and compound)

# ** Reference guide for coming Live Share sessions 实时协作编
# Note to Laurent:
# All our Live Share 实时协作编程 meetings will take place [[https://prod.liveshare.vsengsaas.visualstudio.com/join?4A27AD73291CAB59289663FDEAF5E4D7E201][here.]] This link is valid until July 25th. Coach needs to access his Live Share and join a meeting room using his recurring meeting link mentioned above.
# This in turn will generate a access link that should be sent to the student/interviewer each time.
# #+REVEAL: split
# Note to Jason:
# You have 2 options to join our Live Share meetings.
# #+REVEAL: split
# OPTION 1: you copy-paste our permanent link inside your Live Share
#  You open your Visual Studio Code, hit the Live Share icon, hover over the "Session details" and click on the green icon as explained in this video:
#  [[https://www.loom.com/share/1a5d1fd177c443aa89c1a3bbd6074575][Check this short video]]
# # #+BEGIN_EXPORT html

# # <iframe width="100%" height="650px" src="https://www.loom.com/share/1a5d1fd177c443aa89c1a3bbd6074575"></iframe>
# # #+END_EXPORT
# Follow the instructions in the video and copy-paste this link:
# https://prod.liveshare.vsengsaas.visualstudio.com/join?4A27AD73291CAB59289663FDEAF5E4D7E201


# #+REVEAL: split
# OPTION 2: you click whichever link I send you
# I send you a link that you will click.
# You get the following offline error message? Let me know right away
# #+NAME: fig: Offline
# #+CAPTION: That might happen
# #+ATTR_ORG: :width 400/500/600 :height 500
# #+ATTR_LATEX: :width 2.0in
# #+ATTR_HTML: :width /400/500/600px :height 500px
# [[./assets/liveshare_offline.png]]
# #+REVEAL: split
# Normally though you should see the picture below. Please choose to access the meeting room from your Visual Studio Code:
# #+ATTR_ORG: :width 200/250/300/400/500/600
# #+ATTR_LATEX: :width 2.0in
# #+ATTR_HTML: :width 400/500/600px
# [[./assets/liveshare_normal.png]]

# ** Whiteboard space, go to page 7
# From now on each lesson will have its drawing space where we can draw stuff on. If we are on lesson 7, just pick page 7 of the whiteboard.
# #+REVEAL: split
# #+BEGIN_EXPORT html
# <iframe width="100%" height="500px" src="https://awwapp.com/b/u4r84anbireo8/"></iframe>
# #+END_EXPORT
# ** Big Picture in 2mn
# - you draw it live
# - I introduce the idea of stream (水流？)
# ** Write the code you memorized
# - You draw it
# - we discuss the importance of space (leading space and trailing space)
# - we explain statement, simple statement, compound statement
#   (语句)
# - we discuss the importance of indentation (缩进 Suō jìn)
# ** We try the Live Share tool
# - We test the terminal (终端)
# - We write a hello.py file
# - We run the hello.py file


# * Introducing containers, chatting with python

# # #+ATTR_REVEAL: :frag (appear)
# # <video data-autoplay src="http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4"></video>
# # #+BEGIN_SRC html
# # <video data-autoplay src="http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4"></video>
# # #+END_SRC

# # #+ATTR_REVEAL: :frag (appear)
# # - aaaa
# # - bbb
# # - ccc
# # -
# # #+BEGIN_EXPORT html

# # <iframe width="100%" height="650px" src="https://scrimba.com/c/czbWJRAZ"></iframe>

# ** Short video introducing today's class
# [[https://www.loom.com/share/39a92d85656d4845a74823f7efce41f7]]
# ** Lesson white-board

# Either draw here or go to [[https://awwapp.com/b/u4r84anbireo8/]]
# #+BEGIN_EXPORT html
# <iframe width="100%" height="500px" src="https://awwapp.com/b/u4r84anbireo8/"></iframe>
# #+END_EXPORT
# **
# ** Let's chit-chat with Python
# # #+END_EXPORT
# Earlier I told you we could write letters to python, what I did not tell you is that we can chat with our super hero too.
# Here are some sentences/command that you can send to Python when you chat with him.
# Try those sentences, and if you want make your own sentences!
# #+REVEAL: split
# #+BEGIN_SRC python
# name = "Jason"
# print(name)

# # A variable name can contain letters, numbers, or _
# # but can't start with a number

# # There are 5 data types Numbers, Strings, List, Tuple, Dictionary
# # You can store any of them in the same variable

# name = 15
# print(name)
# # The arithmetic operators +, -, *, /, %, **, //
# print("5 + 2 =", 5+2)
# print("5 - 2 =", 5-2)
# print("5 * 2 =", 5*2)
# # A string is a string of characters surrounded by " or '
# quote = "Always remember your unique,"
# multi_line_quote = ''' just like everyone else" '''
# print(quote + multi_line_quote)
# # LISTS -------------
# # A list allows you to create a list of values and manipulate them
# # Each value has an index with the first one starting at 0
# grocery_list = ['Juice', 'Tomatoes', 'Potatoes', 'Bananas']
# print('The first item is', grocery_list[1])
# # You can change the value stored in a list box
# grocery_list[0] = "Green Juice"
# print(grocery_list)
# #+END_SRC

# #+REVEAL: split
# #+BEGIN_EXPORT html

# <iframe src="https://trinket.io/embed/console/13c197b5a3" width="100%" height="200" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>

# #+END_EXPORT

# ** Let me show you how to write a letter to python now
# ** Let me show you how to write a letter to python now
# #+ATTR_REVEAL: :frag (appear)
# - I will now show you a special type of video:
#     #+ATTR_REVEAL: :frag (appear)
#   - you will see me write a letter to Python
#   - you can interrupt or pause the video any time
#   - once you pause the video you can type code yourself
#     Let me show you!
# #+REVEAL: split

# The tool looks like that.
# Let's access it by going directly to the URL page: [[https://scrimba.com/c/cybQ7rcL]]
# #+BEGIN_EXPORT html

# <iframe width="100%" height="650px" src="https://scrimba.com/c/cybQ7rcL"></iframe>
# #+END_EXPORT

# Check out this video where I am showing you how to use this new teaching tool.



# * lesson 9 ...
# ** Today's class
# - video here: [[https://www.loom.com/share/9d60cf2f978247749031c34d43e24829][https://www.loom.com/share/9d60cf2f978247749031c34d43e24829]]
# - always go to our jit.si room [[https://meet.jit.si/jasonchengyu][https://meet.jit.si/jasonchengyu]]
# - start your visual studio software
# - connect your headset and mic
# ** Lesson white-board
# As usual we have a whiteboard, go to page 9 or the whiteboard
# Either draw here or go to [[https://awwapp.com/b/u4r84anbireo8/]]
# #+BEGIN_EXPORT html
# <iframe width="100%" height="500px" src="https://awwapp.com/b/u4r84anbireo8/"></iframe>
# #+END_EXPORT


# ** Let's chit-chat with Python
# You want to chat with Python? Do it here!
# #+BEGIN_EXPORT html
# <iframe src="https://trinket.io/embed/console/13c197b5a3" width="100%" height="200" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
# #+END_EXPORT

# ** Writing letter to python
# If you want to write letter to python here!
# #+BEGIN_EXPORT html

# <iframe src="https://trinket.io/embed/python3/5c78a83738" width="100%" height="356" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>

# #+END_EXPORT
# ** 填空
# insert the missing part of the code below to output "Hello World":
# _____("Hello world")
# Restaurants must be able to STORE food & PROCESS/COOK it.
# A storage space full of food is not a restaurant.
# A cook and his knives alone is not a restaurant.
# A skilled cook with access to food storage? Now we are talking!
# Essentially a computer is a machine that can both S______ and PRO____ data.
# Do you think that a smart phone is a computer? do you think a Huawei smart watch is a computer?
# You and me are human, we use human language. Computers are machines, they use M______ language.
# Machine language is adapted to human, so we need super-heros to help us talk to computer.
#  #+REVEAL: split
# - Those super-heroes are : C, C#, C++, Java, Python, Java-script etc...
# - You can call those super-heroes and invite them onto your computer
# - Provided we speak their language we can ask those super-heroes anything!
# ** data types review (review)
# Types of data that Python uses:
#   - boolean
#   - string (字符串）
#   - integer整数
#   - float 浮点数
#   - list列表
#   - dictionaries
# Here are some datas, tell me their types:

#  #+REVEAL: split
# - "hello"
# - 2
# - 2.2
# - 1980
# - 'hello'
# - [1 ,2, 3, 45]
# - """my name is laurent"""
# - "2+2"
# - '1 + 1 ='

# ** Reading area
# Ok please record yourself reading the following words:
# Boolean strings Integers floats lists dictionaries!
# A computer is a machine that can Store and process data.
# #+BEGIN_EXPORT html

# <!DOCTYPE html>
# <html class="no-js consumer" lang="en">
#   <head>

#     <script nonce="rjCTJjuEvbJBL74rVobCrA">
# (function(e, p){
#     var m = location.href.match(/platform=(win8|win|mac|linux|cros)/);
#     e.id = (m && m[1]) ||
#            (p.indexOf('Windows NT 6.2') > -1 ? 'win8' : p.indexOf('Windows') > -1 ? 'win' : p.indexOf('Mac') > -1 ? 'mac' : p.indexOf('CrOS') > -1 ? 'cros' : 'linux');
#     e.className = e.className.replace(/\bno-js\b/,'js');
#   })(document.documentElement, window.navigator.userAgent)
#     </script>
#     <meta charset="utf-8">
#     <meta content="initial-scale=1, minimum-scale=1, width=device-width" name="viewport">
#     <meta content=
#     "Google Chrome is a browser that combines a minimal design with sophisticated technology to make the web faster, safer, and easier."
#     name="description">
#     <title>
#       Chrome Browser
#     </title>
#     <link href="https://plus.google.com/100585555255542998765" rel="publisher">
#     <link href="//www.google.com/images/icons/product/chrome-32.png" rel="icon" type="image/ico">
#     <link href="//fonts.googleapis.com/css?family=Open+Sans:300,400,600,700&amp;subset=latin" rel=
#     "stylesheet" nonce="rjCTJjuEvbJBL74rVobCrA">
#     <link href="/intl/en/chrome/assets/common/css/chrome.min.css" rel="stylesheet" nonce="rjCTJjuEvbJBL74rVobCrA">
#     <script src="//www.google.com/js/gweb/analytics/autotrack.js" nonce="rjCTJjuEvbJBL74rVobCrA">
# </script>
#     <script nonce="rjCTJjuEvbJBL74rVobCrA">
# new gweb.analytics.AutoTrack({
#           profile: 'UA-26908291-1'
#         });
#     </script>
#     <style>
# #info {
#     font-size: 20px;
#     }
#     #div_start {
#     float: right;
#     }
#     #headline {
#     text-decoration: none
#     }
#     #results {
#     font-size: 14px;
#     font-weight: bold;
#     border: 1px solid #ddd;
#     padding: 15px;
#     text-align: left;
#     min-height: 150px;
#     }
#     #start_button {
#     border: 0;
#     background-color:transparent;
#     padding: 0;
#     }
#     .interim {
#     color: gray;
#     }
#     .final {
#     color: black;
#     padding-right: 3px;
#     }
#     .button {
#     display: none;
#     }
#     .marquee {
#     margin: 20px auto;
#     }

#     #buttons {
#     margin: 10px 0;
#     position: relative;
#     top: -50px;
#     }

#     #copy {
#     margin-top: 20px;
#     }

#     #copy > div {
#     display: none;
#     margin: 0 70px;
#     }
#     </style>
#     <style>
# a.c1 {font-weight: normal;}
#     </style>
#   </head>
#   <body class="" id="grid">
#     <div class="browser-landing" id="main">
#       <div class="compact marquee-stacked" id="marquee">
#         <div class="marquee-copy">
#         </div>
#       </div>
#       <div class="compact marquee">
#         <div id="info">
#           <p id="info_start">
#             Click on the microphone icon and begin speaking for as long as you like.
#           </p>
#           <p id="info_speak_now" style="display:none">
#             Speak now.
#           </p>
#           <p id="info_no_speech" style="display:none">
#             No speech was detected. You may need to adjust your <a href=
#             "//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">microphone
#             settings</a>.
#           </p>
#           <p id="info_no_microphone" style="display:none">
#             No microphone was found. Ensure that a microphone is installed and that
#             <a href="//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">
#             microphone settings</a> are configured correctly.
#           </p>
#           <p id="info_allow" style="display:none">
#             Click the "Allow" button above to enable your microphone.
#           </p>
#           <p id="info_denied" style="display:none">
#             Permission to use microphone was denied.
#           </p>
#           <p id="info_blocked" style="display:none">
#             Permission to use microphone is blocked. To change, go to
#             chrome://settings/contentExceptions#media-stream
#           </p>
#           <p id="info_upgrade" style="display:none">
#             Web Speech API is not supported by this browser. Upgrade to <a href=
#             "//www.google.com/chrome">Chrome</a> version 25 or later.
#           </p>
#         </div>
#         <div id="div_start">
#           <button id="start_button" onclick="startButton(event)"><img alt="Start" id="start_img"
#           src="/intl/en/chrome/assets/common/images/content/mic.gif"></button>
#         </div>
#         <div id="results">
#           <span class="final" id="final_span"></span> <span class="interim" id=
#           "interim_span"></span>
#         </div>
#         <div id="copy">
#           <button class="button" id="copy_button" onclick="copyButton()">Copy and Paste</button>
#           <div id="copy_info">
#             <p>
#               Press Control-C to copy text.
#             </p>
#             <p>
#               (Command-C on Mac.)
#             </p>
#           </div><button class="button" id="email_button" onclick="emailButton()">Create
#           Email</button>
#           <div id="email_info">
#             <p>
#               Text sent to default email application.
#             </p>
#             <p>
#               (See chrome://settings/handlers to change.)
#             </p>
#           </div>
#         </div>
#         <div class="compact marquee" id="div_language">
#           <select id="select_language" onchange="updateCountry()">
#             </select>&nbsp;&nbsp; <select id="select_dialect">
#             </select>
#         </div>
#       </div>
#     </div><script src="/intl/en/chrome/assets/common/js/chrome.min.js" nonce="rjCTJjuEvbJBL74rVobCrA">
# </script> <script nonce="rjCTJjuEvbJBL74rVobCrA">
# var chrmMenuBar = new chrm.ui.MenuBar();
#       chrmMenuBar.decorate('nav');
#       var chrmLogo = new chrm.ui.Logo('logo');

#       var chrmscroll = new chrm.ui.SmoothScroll('scroll');
#       chrmscroll.init();



#   window.___gcfg = { lang: 'en' };
#   (function() {
#     var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
#     po.src = 'https://apis.google.com/js/plusone.js';
#     var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
#   })();




#       var doubleTracker = new gweb.analytics.DoubleTrack('floodlight', {
#           src: 2542116,
#           type: 'clien612',
#           cat: 'chrom0'
#       });
#       doubleTracker.track();

#       doubleTracker.trackClass('doubletrack', true);
#     </script> <script nonce="rjCTJjuEvbJBL74rVobCrA">
# // If you modify this array, also update default language / dialect below.
# var langs =
# [['Afrikaans',       ['af-ZA']],
#  ['አማርኛ',           ['am-ET']],
#  ['Azərbaycanca',    ['az-AZ']],
#  ['বাংলা',            ['bn-BD', 'বাংলাদেশ'],
#                      ['bn-IN', 'ভারত']],
#  ['Bahasa Indonesia',['id-ID']],
#  ['Bahasa Melayu',   ['ms-MY']],
#  ['Català',          ['ca-ES']],
#  ['Čeština',         ['cs-CZ']],
#  ['Dansk',           ['da-DK']],
#  ['Deutsch',         ['de-DE']],
#  ['English',         ['en-AU', 'Australia'],
#                      ['en-CA', 'Canada'],
#                      ['en-IN', 'India'],
#                      ['en-KE', 'Kenya'],
#                      ['en-TZ', 'Tanzania'],
#                      ['en-GH', 'Ghana'],
#                      ['en-NZ', 'New Zealand'],
#                      ['en-NG', 'Nigeria'],
#                      ['en-ZA', 'South Africa'],
#                      ['en-PH', 'Philippines'],
#                      ['en-GB', 'United Kingdom'],
#                      ['en-US', 'United States']],
#  ['Español',         ['es-AR', 'Argentina'],
#                      ['es-BO', 'Bolivia'],
#                      ['es-CL', 'Chile'],
#                      ['es-CO', 'Colombia'],
#                      ['es-CR', 'Costa Rica'],
#                      ['es-EC', 'Ecuador'],
#                      ['es-SV', 'El Salvador'],
#                      ['es-ES', 'España'],
#                      ['es-US', 'Estados Unidos'],
#                      ['es-GT', 'Guatemala'],
#                      ['es-HN', 'Honduras'],
#                      ['es-MX', 'México'],
#                      ['es-NI', 'Nicaragua'],
#                      ['es-PA', 'Panamá'],
#                      ['es-PY', 'Paraguay'],
#                      ['es-PE', 'Perú'],
#                      ['es-PR', 'Puerto Rico'],
#                      ['es-DO', 'República Dominicana'],
#                      ['es-UY', 'Uruguay'],
#                      ['es-VE', 'Venezuela']],
#  ['Euskara',         ['eu-ES']],
#  ['Filipino',        ['fil-PH']],
#  ['Français',        ['fr-FR']],
#  ['Basa Jawa',       ['jv-ID']],
#  ['Galego',          ['gl-ES']],
#  ['ગુજરાતી',           ['gu-IN']],
#  ['Hrvatski',        ['hr-HR']],
#  ['IsiZulu',         ['zu-ZA']],
#  ['Íslenska',        ['is-IS']],
#  ['Italiano',        ['it-IT', 'Italia'],
#                      ['it-CH', 'Svizzera']],
#  ['ಕನ್ನಡ',             ['kn-IN']],
#  ['ភាសាខ្មែរ',          ['km-KH']],
#  ['Latviešu',        ['lv-LV']],
#  ['Lietuvių',        ['lt-LT']],
#  ['മലയാളം',          ['ml-IN']],
#  ['मराठी',             ['mr-IN']],
#  ['Magyar',          ['hu-HU']],
#  ['ລາວ',              ['lo-LA']],
#  ['Nederlands',      ['nl-NL']],
#  ['नेपाली भाषा',        ['ne-NP']],
#  ['Norsk bokmål',    ['nb-NO']],
#  ['Polski',          ['pl-PL']],
#  ['Português',       ['pt-BR', 'Brasil'],
#                      ['pt-PT', 'Portugal']],
#  ['Română',          ['ro-RO']],
#  ['සිංහල',          ['si-LK']],
#  ['Slovenščina',     ['sl-SI']],
#  ['Basa Sunda',      ['su-ID']],
#  ['Slovenčina',      ['sk-SK']],
#  ['Suomi',           ['fi-FI']],
#  ['Svenska',         ['sv-SE']],
#  ['Kiswahili',       ['sw-TZ', 'Tanzania'],
#                      ['sw-KE', 'Kenya']],
#  ['ქართული',       ['ka-GE']],
#  ['Հայերեն',          ['hy-AM']],
#  ['தமிழ்',            ['ta-IN', 'இந்தியா'],
#                      ['ta-SG', 'சிங்கப்பூர்'],
#                      ['ta-LK', 'இலங்கை'],
#                      ['ta-MY', 'மலேசியா']],
#  ['తెలుగు',           ['te-IN']],
#  ['Tiếng Việt',      ['vi-VN']],
#  ['Türkçe',          ['tr-TR']],
#  ['اُردُو',            ['ur-PK', 'پاکستان'],
#                      ['ur-IN', 'بھارت']],
#  ['Ελληνικά',         ['el-GR']],
#  ['български',         ['bg-BG']],
#  ['Pусский',          ['ru-RU']],
#  ['Српски',           ['sr-RS']],
#  ['Українська',        ['uk-UA']],
#  ['한국어',            ['ko-KR']],
#  ['中文',             ['cmn-Hans-CN', '普通话 (中国大陆)'],
#                      ['cmn-Hans-HK', '普通话 (香港)'],
#                      ['cmn-Hant-TW', '中文 (台灣)'],
#                      ['yue-Hant-HK', '粵語 (香港)']],
#  ['日本語',           ['ja-JP']],
#  ['हिन्दी',             ['hi-IN']],
#  ['ภาษาไทย',         ['th-TH']]];

# for (var i = 0; i < langs.length; i++) {
#   select_language.options[i] = new Option(langs[i][0], i);
# }
# // Set default language / dialect.
# select_language.selectedIndex = 10;
# updateCountry();
# select_dialect.selectedIndex = 11;
# showInfo('info_start');

# function updateCountry() {
#   for (var i = select_dialect.options.length - 1; i >= 0; i--) {
#     select_dialect.remove(i);
#   }
#   var list = langs[select_language.selectedIndex];
#   for (var i = 1; i < list.length; i++) {
#     select_dialect.options.add(new Option(list[i][1], list[i][0]));
#   }
#   select_dialect.style.visibility = list[1].length == 1 ? 'hidden' : 'visible';
# }

# var create_email = false;
# var final_transcript = '';
# var recognizing = false;
# var ignore_onend;
# var start_timestamp;
# if (!('webkitSpeechRecognition' in window)) {
#   upgrade();
# } else {
#   start_button.style.display = 'inline-block';
#   var recognition = new webkitSpeechRecognition();
#   recognition.continuous = true;
#   recognition.interimResults = true;

#   recognition.onstart = function() {
#     recognizing = true;
#     showInfo('info_speak_now');
#     start_img.src = '/intl/en/chrome/assets/common/images/content/mic-animate.gif';
#   };

#   recognition.onerror = function(event) {
#     if (event.error == 'no-speech') {
#       start_img.src = '/intl/en/chrome/assets/common/images/content/mic.gif';
#       showInfo('info_no_speech');
#       ignore_onend = true;
#     }
#     if (event.error == 'audio-capture') {
#       start_img.src = '/intl/en/chrome/assets/common/images/content/mic.gif';
#       showInfo('info_no_microphone');
#       ignore_onend = true;
#     }
#     if (event.error == 'not-allowed') {
#       if (event.timeStamp - start_timestamp < 100) {
#         showInfo('info_blocked');
#       } else {
#         showInfo('info_denied');
#       }
#       ignore_onend = true;
#     }
#   };

#   recognition.onend = function() {
#     recognizing = false;
#     if (ignore_onend) {
#       return;
#     }
#     start_img.src = '/intl/en/chrome/assets/common/images/content/mic.gif';
#     if (!final_transcript) {
#       showInfo('info_start');
#       return;
#     }
#     showInfo('');
#     if (window.getSelection) {
#       window.getSelection().removeAllRanges();
#       var range = document.createRange();
#       range.selectNode(document.getElementById('final_span'));
#       window.getSelection().addRange(range);
#     }
#     if (create_email) {
#       create_email = false;
#       createEmail();
#     }
#   };

#   recognition.onresult = function(event) {
#     var interim_transcript = '';
#     if (typeof(event.results) == 'undefined') {
#       recognition.onend = null;
#       recognition.stop();
#       upgrade();
#       return;
#     }
#     for (var i = event.resultIndex; i < event.results.length; ++i) {
#       if (event.results[i].isFinal) {
#         final_transcript += event.results[i][0].transcript;
#       } else {
#         interim_transcript += event.results[i][0].transcript;
#       }
#     }
#     final_transcript = capitalize(final_transcript);
#     final_span.innerHTML = linebreak(final_transcript);
#     interim_span.innerHTML = linebreak(interim_transcript);
#     if (final_transcript || interim_transcript) {
#       showButtons('inline-block');
#     }
#   };
# }

# function upgrade() {
#   start_button.style.visibility = 'hidden';
#   showInfo('info_upgrade');
# }

# var two_line = /\n\n/g;
# var one_line = /\n/g;
# function linebreak(s) {
#   return s.replace(two_line, '<p></p>').replace(one_line, '<br>');
# }

# var first_char = /\S/;
# function capitalize(s) {
#   return s.replace(first_char, function(m) { return m.toUpperCase(); });
# }

# function createEmail() {
#   var n = final_transcript.indexOf('\n');
#   if (n < 0 || n >= 80) {
#     n = 40 + final_transcript.substring(40).indexOf(' ');
#   }
#   var subject = encodeURI(final_transcript.substring(0, n));
#   var body = encodeURI(final_transcript.substring(n + 1));
#   window.location.href = 'mailto:?subject=' + subject + '&body=' + body;
# }

# function copyButton() {
#   if (recognizing) {
#     recognizing = false;
#     recognition.stop();
#   }
#   copy_button.style.display = 'none';
#   copy_info.style.display = 'inline-block';
#   showInfo('');
# }

# function emailButton() {
#   if (recognizing) {
#     create_email = true;
#     recognizing = false;
#     recognition.stop();
#   } else {
#     createEmail();
#   }
#   email_button.style.display = 'none';
#   email_info.style.display = 'inline-block';
#   showInfo('');
# }

# function startButton(event) {
#   if (recognizing) {
#     recognition.stop();
#     return;
#   }
#   final_transcript = '';
#   recognition.lang = select_dialect.value;
#   recognition.start();
#   ignore_onend = false;
#   final_span.innerHTML = '';
#   interim_span.innerHTML = '';
#   start_img.src = '/intl/en/chrome/assets/common/images/content/mic-slash.gif';
#   showInfo('info_allow');
#   showButtons('none');
#   start_timestamp = event.timeStamp;
# }

# function showInfo(s) {
#   if (s) {
#     for (var child = info.firstChild; child; child = child.nextSibling) {
#       if (child.style) {
#         child.style.display = child.id == s ? 'inline' : 'none';
#       }
#     }
#     info.style.visibility = 'visible';
#   } else {
#     info.style.visibility = 'hidden';
#   }
# }

# var current_style;
# function showButtons(style) {
#   if (style == current_style) {
#     return;
#   }
#   current_style = style;
#   copy_button.style.display = style;
#   email_button.style.display = style;
#   copy_info.style.display = 'none';
#   email_info.style.display = 'none';
# }
#     </script>
#   </body>
# </html>

# #+END_EXPORT
# ** Creating variables (review)
# We talked about variables already. I said that variables are like labeled/named boxes that contain data.
# check the code below, and guess what: python will do when it read it line by line:
# #+BEGIN_SRC python
# jason_age = 10
# jason_best_friend = "Milo"
# jason_birth_year = 2020 - jason_age
# print(jason_age)
# print(jason_best_friend)
# print(jason_birth_year)
# #+END_SRC
# ** Ex 1: copy the code above:
# - let's try to paste it into the letter area
# - let's try to place it into the chitchat area


# ** Use variables as much as you can (review)
# Do you think the code below is correct?
# - take it into your letter to Python and run it!
# - How can you improve it? (tip: use a variable )
# #+BEGIN_SRC python
# print( "Hello World, my name is Jason and I am coder")
# print("It was a pleasure to meet you, see you soon")
# #+END_SRC

# ** Vocabulary (review)
# We reviewed lesson 2:
# |-------------------------+--------------------------|
# | python 英雄             | computer 电脑            |
# | Store 存储              | Process 处理             |
# | ML 机器语言             | Jason 编程人员           |
# | Envelope 信封           | Letter (信封里的信)      |
# | StandardInput 标准输入  | python's left hand       |
# | python's right hand     | Standard Output 标准输出 |
# | Standard Error 标准错误 | print/say(显示)          |
# | return(返回)            |                          |
# |-------------------------+--------------------------|
# ** lesson 10
# #+BEGIN_EXPORT html
# <iframe src="https://giphy.com/embed/11ISwbgCxEzMyY" width="480" height="360" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
# #+END_EXPORT

# ** Today's class
# - video here: https://www.loom.com/share/44854a7d183a414bac4b7882622d04e2
#   [[https://www.loom.com/share/9d60cf2f978247749031c34d43e24829][https://www.loom.com/share/9d60cf2f978247749031c34d43e24829]]
# - always go to our jit.si room [[https://meet.jit.si/jasonchengyu][https://meet.jit.si/jasonchengyu]]
# - start your visual studio software
# - connect your headset and mic
# ** Lesson white-board
# As usual we have a whiteboard, go to page 9 or the whiteboard
# Either draw here or go to [[https://awwapp.com/b/u4r84anbireo8/]]
# #+BEGIN_EXPORT html
# <iframe width="100%" height="500px" src="https://awwapp.com/b/u4r84anbireo8/" allowfullscreen></iframe>
# #+END_EXPORT


# ** Let's chit-chat with Python
# You want to chat with Python? Do it here!
# #+BEGIN_EXPORT html
# <iframe src="https://trinket.io/embed/console/13c197b5a3" width="100%" height="200" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
# #+END_EXPORT

# ** Writing letter to python
# If you want to write letter to python here!
# #+BEGIN_EXPORT html

# <iframe src="https://trinket.io/embed/python3/5c78a83738" width="100%" height="356" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>

# #+END_EXPORT
# ** 填空
# insert the missing part of the code below to output "Hello World":
# _____("Hello world")
# Restaurants must be able to STORE food & PROCESS/COOK it.
# A storage space full of food is not a restaurant.
# A cook and his knives alone is not a restaurant.
# A skilled cook with access to food storage? Now we are talking!
# Essentially a computer is a machine that can both S______ and PRO____ data.
# Do you think that a smart phone is a computer? do you think a Huawei smart watch is a computer?
# You and me are human, we use human language. Computers are machines, they use M______ language.
# Machine language is adapted to human, so we need super-heros to help us talk to computer.
#  #+REVEAL: split
# - Those super-heroes are : C, C#, C++, Java, Python, Java-script etc...
# - You can call those super-heroes and invite them onto your computer
# - Provided we speak their language we can ask those super-heroes anything!
# ** Reading area
# Ok please record yourself reading the following words:
# Boolean strings Integers floats lists dictionaries!
# A computer is a machine that can Store and process data.

# #+BEGIN_EXPORT html

# <!DOCTYPE html>
#   <head>

#     <script nonce="rjCTJjuEvbJBL74rVobCrA">
# (function(e, p){
#     var m = location.href.match(/platform=(win8|win|mac|linux|cros)/);
#     e.id = (m && m[1]) ||
#            (p.indexOf('Windows NT 6.2') > -1 ? 'win8' : p.indexOf('Windows') > -1 ? 'win' : p.indexOf('Mac') > -1 ? 'mac' : p.indexOf('CrOS') > -1 ? 'cros' : 'linux');
#     e.className = e.className.replace(/\bno-js\b/,'js');
#   })(document.documentElement, window.navigator.userAgent)
#     </script>
#     <meta charset="utf-8">
#     <meta content="initial-scale=1, minimum-scale=1, width=device-width" name="viewport">
#     <meta content=
#     "Google Chrome is a browser that combines a minimal design with sophisticated technology to make the web faster, safer, and easier."
#     name="description">
#     <title>
#       Chrome Browser
#     </title>
#     <link href="https://plus.google.com/100585555255542998765" rel="publisher">
#     <link href="//www.google.com/images/icons/product/chrome-32.png" rel="icon" type="image/ico">
#     <link href="//fonts.googleapis.com/css?family=Open+Sans:300,400,600,700&amp;subset=latin" rel=
#     "stylesheet" nonce="rjCTJjuEvbJBL74rVobCrA">
#     <link href="/intl/en/chrome/assets/common/css/chrome.min.css" rel="stylesheet" nonce="rjCTJjuEvbJBL74rVobCrA">
#     <script src="//www.google.com/js/gweb/analytics/autotrack.js" nonce="rjCTJjuEvbJBL74rVobCrA">
# </script>
#     <script nonce="rjCTJjuEvbJBL74rVobCrA">
# new gweb.analytics.AutoTrack({
#           profile: 'UA-26908291-1'
#         });
#     </script>
#     <style>
# #info {
#     font-size: 20px;
#     }
#     #div_start {
#     float: right;
#     }
#     #headline {
#     text-decoration: none
#     }
#     #results {
#     font-size: 20px;
#     font-weight: bold;
#     border: 1px solid #ddd;
#     padding: 15px;
#     text-align: left;
#     min-height: 150px;
#    text-transform: uppercase;
#     }
#     #start_button {
#     border: 0;
#     background-color:transparent;
#     padding: 0;
#     }
#     .interim {
#     color: gray;
#     }
#     .final {
#     color: black;
#     padding-right: 3px;
#     }
#     .button {
#     display: none;
#     }
#     .marquee {
#     margin: 20px auto;
#     }

#     #buttons {
#     margin: 10px 0;
#     position: relative;
#     top: -50px;
#     }

#     #copy {
#     margin-top: 20px;
#     }

#     #copy > div {
#     display: none;
#     margin: 0 70px;
#     }
#     </style>
#     <style>
# a.c1 {font-weight: normal;}
#     </style>
#   </head>
#   <body class="" id="grid">
#     <div class="browser-landing" id="main">
#       <div class="compact marquee-stacked" id="marquee">
#         <div class="marquee-copy">
#         </div>
#       </div>
#       <div class="compact marquee">
#         <div id="info">
#           <p id="info_start">
#             Click on the microphone icon and begin speaking for as long as you like.
#           </p>
#           <p id="info_speak_now" style="display:none">
#             Go ahead, speak now.
#           </p>
#           <p id="info_no_speech" style="display:none">
#             No speech was detected. You may need to adjust your <a href=
#             "//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">microphone
#             settings</a>.
#           </p>
#           <p id="info_no_microphone" style="display:none">
#             No microphone was found. Ensure that a microphone is installed and that
#             <a href="//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">
#             microphone settings</a> are configured correctly.
#           </p>
#           <p id="info_allow" style="display:none">
#             Click the "Allow" button above to enable your microphone.
#           </p>
#           <p id="info_denied" style="display:none">
#             Permission to use microphone was denied.
#           </p>
#           <p id="info_blocked" style="display:none">
#             Permission to use microphone is blocked. To change, go to
#             chrome://settings/contentExceptions#media-stream
#           </p>
#           <p id="info_upgrade" style="display:none">
#             Web Speech API is not supported by this browser. Upgrade to <a href=
#             "//www.google.com/chrome">Chrome</a> version 25 or later.
#           </p>
#         </div>
#         <div id="div_start">
#           <button id="start_button" onclick="startButton(event)"><img alt="Start" id="start_img"
#           src="./assets/mic.gif"></button>
#         </div>
#         <div id="results">
#           <span class="final" id="final_span"></span> <span class="interim" id=
#           "interim_span"></span>
#         </div>
#         <div id="copy">
#           <button class="button" id="copy_button" onclick="copyButton()">Copy and Paste</button>
#           <div id="copy_info">
#             <p>
#               Press Control-C to copy text.
#             </p>
#             <p>
#               (Command-C on Mac.)
#             </p>
#           </div><button class="button" id="email_button" onclick="emailButton()">Create
#           Email</button>
#           <div id="email_info">
#             <p>
#               Text sent to default email application.
#             </p>
#             <p>
#               (See chrome://settings/handlers to change.)
#             </p>
#           </div>
#         </div>
#         <div class="compact marquee" id="div_language">
#           <select id="select_language" onchange="updateCountry()">
#             </select>&nbsp;&nbsp; <select id="select_dialect">
#             </select>
#         </div>
#       </div>
#     </div><script src="/intl/en/chrome/assets/common/js/chrome.min.js" nonce="rjCTJjuEvbJBL74rVobCrA">
# </script> <script nonce="rjCTJjuEvbJBL74rVobCrA">
# var chrmMenuBar = new chrm.ui.MenuBar();
#       chrmMenuBar.decorate('nav');
#       var chrmLogo = new chrm.ui.Logo('logo');

#       var chrmscroll = new chrm.ui.SmoothScroll('scroll');
#       chrmscroll.init();



#   window.___gcfg = { lang: 'en' };
#   (function() {
#     var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
#     po.src = 'https://apis.google.com/js/plusone.js';
#     var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
#   })();




#       var doubleTracker = new gweb.analytics.DoubleTrack('floodlight', {
#           src: 2542116,
#           type: 'clien612',
#           cat: 'chrom0'
#       });
#       doubleTracker.track();
#       doubleTracker.trackClass('doubletrack', true);
#     </script> <script nonce="rjCTJjuEvbJBL74rVobCrA">
# // If you modify this array, also update default language / dialect below.
# var langs =
#  [['English',       ['en-GB', 'United Kingdom'],
#                      ['en-US', 'United States']],
#  ['Français',        ['fr-FR']],
#  ['中文',             ['cmn-Hans-CN', '普通话 (中国大陆)']]];

# for (var i = 0; i < langs.length; i++) {
#   select_language.options[i] = new Option(langs[i][0], i);
# }
# // Set default language / dialect.
# select_language.selectedIndex = 0;
# updateCountry();
# select_dialect.selectedIndex = 1;
# showInfo('info_start');

# function updateCountry() {
#   for (var i = select_dialect.options.length - 1; i >= 0; i--) {
#     select_dialect.remove(i);
#   }
#   var list = langs[select_language.selectedIndex];
#   for (var i = 1; i < list.length; i++) {
#     select_dialect.options.add(new Option(list[i][1], list[i][0]));
#   }
#   select_dialect.style.visibility = list[1].length == 1 ? 'hidden' : 'visible';
# }

# var create_email = false;
# var final_transcript = '';
# var recognizing = false;
# var ignore_onend;
# var start_timestamp;
# if (!('webkitSpeechRecognition' in window)) {
#   upgrade();
# } else {
#   start_button.style.display = 'inline-block';
#   var recognition = new webkitSpeechRecognition();
#   recognition.continuous = true;
#   recognition.interimResults = true;

#   recognition.onstart = function() {
#     recognizing = true;
#     showInfo('info_speak_now');
#     start_img.src = './assets/mic-animate.gif';
#   };

#   recognition.onerror = function(event) {
#     if (event.error == 'no-speech') {
#       start_img.src = './assets/mic.gif';
#       showInfo('info_no_speech');
#       ignore_onend = true;
#     }
#     if (event.error == 'audio-capture') {
#       start_img.src = './assets/mic.gif';
#       showInfo('info_no_microphone');
#       ignore_onend = true;
#     }
#     if (event.error == 'not-allowed') {
#       if (event.timeStamp - start_timestamp < 100) {
#         showInfo('info_blocked');
#       } else {
#         showInfo('info_denied');
#       }
#       ignore_onend = true;
#     }
#   };

#   recognition.onend = function() {
#     recognizing = false;
#     if (ignore_onend) {
#       return;
#     }
#     start_img.src = '/assets/mic.gif';
#     if (!final_transcript) {
#       showInfo('info_start');
#       return;
#     }
#     showInfo('');
#     if (window.getSelection) {
#       window.getSelection().removeAllRanges();
#       var range = document.createRange();
#       range.selectNode(document.getElementById('final_span'));
#       window.getSelection().addRange(range);
#     }
#     if (create_email) {
#       create_email = false;
#       createEmail();
#     }
#   };

#   recognition.onresult = function(event) {
#     var interim_transcript = '';
#     if (typeof(event.results) == 'undefined') {
#       recognition.onend = null;
#       recognition.stop();
#       upgrade();
#       return;
#     }
#     for (var i = event.resultIndex; i < event.results.length; ++i) {
#       if (event.results[i].isFinal) {
#         final_transcript += event.results[i][0].transcript;
#       } else {
#         interim_transcript += event.results[i][0].transcript;
#       }
#     }
#     final_transcript = capitalize(final_transcript);
#     final_span.innerHTML = linebreak(final_transcript);
#     interim_span.innerHTML = linebreak(interim_transcript);
#     if (final_transcript || interim_transcript) {
#       showButtons('inline-block');
#     }
#   };
# }

# function upgrade() {
#   start_button.style.visibility = 'hidden';
#   showInfo('info_upgrade');
# }

# var two_line = /\n\n/g;
# var one_line = /\n/g;
# function linebreak(s) {
#   return s.replace(two_line, '<p></p>').replace(one_line, '<br>');
# }

# var first_char = /\S/;
# function capitalize(s) {
#   return s.replace(first_char, function(m) { return m.toUpperCase(); });
# }

# function createEmail() {
#   var n = final_transcript.indexOf('\n');
#   if (n < 0 || n >= 80) {
#     n = 40 + final_transcript.substring(40).indexOf(' ');
#   }
#   var subject = encodeURI(final_transcript.substring(0, n));
#   var body = encodeURI(final_transcript.substring(n + 1));
#   window.location.href = 'mailto:?subject=' + subject + '&body=' + body;
# }

# function copyButton() {
#   if (recognizing) {
#     recognizing = false;
#     recognition.stop();
#   }
#   copy_button.style.display = 'none';
#   copy_info.style.display = 'inline-block';
#   showInfo('');
# }

# function emailButton() {
#   if (recognizing) {
#     create_email = true;
#     recognizing = false;
#     recognition.stop();
#   } else {
#     createEmail();
#   }
#   email_button.style.display = 'none';
#   email_info.style.display = 'inline-block';
#   showInfo('');
# }

# function startButton(event) {
#   if (recognizing) {
#     recognition.stop();
#     return;
#   }
#   final_transcript = '';
#   recognition.lang = select_dialect.value;
#   recognition.start();
#   ignore_onend = false;
#   final_span.innerHTML = '';
#   interim_span.innerHTML = '';
#   start_img.src = './assets/mic-slash.gif';
#   showInfo('info_allow');
#   showButtons('none');
#   start_timestamp = event.timeStamp;
# }

# function showInfo(s) {
#   if (s) {
#     for (var child = info.firstChild; child; child = child.nextSibling) {
#       if (child.style) {
#         child.style.display = child.id == s ? 'inline' : 'none';
#       }
#     }
#     info.style.visibility = 'visible';
#   } else {
#     info.style.visibility = 'hidden';
#   }
# }

# var current_style;
# function showButtons(style) {
#   if (style == current_style) {
#     return;
#   }
#   current_style = style;
#   copy_button.style.display = style;
#   email_button.style.display = style;
#   copy_info.style.display = 'none';
#   email_info.style.display = 'none';
# }
#     </script>
#   </body>


# #+END_EXPORT
# ** Creating variables (review)
# We talked about variables already. I said that variables are like labeled/named boxes that contain data.
# check the code below, and guess what: python will do when it read it line by line:
# #+BEGIN_SRC python
# jason_age = 10
# jason_best_friend = "Milo"
# jason_birth_year = 2020 - jason_age
# print(jason_age)
# print(jason_best_friend)
# print(jason_birth_year)
# #+END_SRC

# ** Use variables as much as you can (review)
# Do you think the code below is correct?
# - take it into your letter to Python and run it!
# - How can you improve it? (tip: use a variable )
# #+BEGIN_SRC python
# print( "Hello World, my name is Jason and I am coder")
# print("It was a pleasure to meet you, see you soon")
# #+END_SRC
# ** Let's code together live with Visual Studio



* Lesson 1
Welcome to Python 101, and congratulations on learning coding that early in life!
#+BEGIN_EXPORT html
<iframe src="https://giphy.com/embed/11ISwbgCxEzMyY" width="480" height="360" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
#+END_EXPORT


** White-board 白板区

#+BEGIN_EXPORT html
<iframe width="100%" height="500px" src="https://awwapp.com/b/u4r84anbireo8/" allowfullscreen></iframe>
#+END_EXPORT


** Reading area
When we talk about coding we use specific terms (function, data types, boolean, integers etc...).
It is important that you pronounce those words properly (你的发音提高的话你的听力也会提高，而上课的时候听力至关重要), so visit this reading area as often as you can!
#+BEGIN_EXPORT html
<div class="iframe-container">
<iframe src="https://giphy.com/embed/2S4djnTiypJZK" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
</div>
#+END_EXPORT


 #+REVEAL: split
Coding with Python is just like learning english, pronunciation is crucially important!

#+BEGIN_EXPORT html

<!DOCTYPE html>
  <head>

    <script nonce="rjCTJjuEvbJBL74rVobCrA">
(function(e, p){
    var m = location.href.match(/platform=(win8|win|mac|linux|cros)/);
    e.id = (m && m[1]) ||
           (p.indexOf('Windows NT 6.2') > -1 ? 'win8' : p.indexOf('Windows') > -1 ? 'win' : p.indexOf('Mac') > -1 ? 'mac' : p.indexOf('CrOS') > -1 ? 'cros' : 'linux');
    e.className = e.className.replace(/\bno-js\b/,'js');
  })(document.documentElement, window.navigator.userAgent)
    </script>
    <meta charset="utf-8">
    <meta content="initial-scale=1, minimum-scale=1, width=device-width" name="viewport">
    <meta content=
    "Google Chrome is a browser that combines a minimal design with sophisticated technology to make the web faster, safer, and easier."
    name="description">
    <title>
      Chrome Browser
    </title>
    <link href="https://plus.google.com/100585555255542998765" rel="publisher">
    <link href="//www.google.com/images/icons/product/chrome-32.png" rel="icon" type="image/ico">
    <link href="//fonts.googleapis.com/css?family=Open+Sans:300,400,600,700&amp;subset=latin" rel=
    "stylesheet" nonce="rjCTJjuEvbJBL74rVobCrA">
    <link href="/intl/en/chrome/assets/common/css/chrome.min.css" rel="stylesheet" nonce="rjCTJjuEvbJBL74rVobCrA">
    <script src="//www.google.com/js/gweb/analytics/autotrack.js" nonce="rjCTJjuEvbJBL74rVobCrA">
</script>
    <script nonce="rjCTJjuEvbJBL74rVobCrA">
new gweb.analytics.AutoTrack({
          profile: 'UA-26908291-1'
        });
    </script>
    <style>
#info {
    font-size: 20px;
    }
    #div_start {
    float: right;
    }
    #headline {
    text-decoration: none
    }
    #results {
    font-size: 20px;
    font-weight: bold;
    border: 1px solid #ddd;
    padding: 15px;
    text-align: left;
    min-height: 150px;
   text-transform: uppercase;
    }
    #start_button {
    border: 0;
    background-color:transparent;
    padding: 0;
    }
    .interim {
    color: gray;
    }
    .final {
    color: black;
    padding-right: 3px;
    }
    .button {
    display: none;
    }
    .marquee {
    margin: 20px auto;
    }

    #buttons {
    margin: 10px 0;
    position: relative;
    top: -50px;
    }

    #copy {
    margin-top: 20px;
    }

    #copy > div {
    display: none;
    margin: 0 70px;
    }
    </style>
    <style>
a.c1 {font-weight: normal;}
    </style>
  </head>
  <body class="" id="grid">
    <div class="browser-landing" id="main">
      <div class="compact marquee-stacked" id="marquee">
        <div class="marquee-copy">
        </div>
      </div>
      <div class="compact marquee">
        <div id="info">
          <p id="info_start">
            Click on the microphone icon and begin speaking for as long as you like.
          </p>
          <p id="info_speak_now" style="display:none">
            Go ahead, speak now.
          </p>
          <p id="info_no_speech" style="display:none">
            No speech was detected. You may need to adjust your <a href=
            "//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">microphone
            settings</a>.
          </p>
          <p id="info_no_microphone" style="display:none">
            No microphone was found. Ensure that a microphone is installed and that
            <a href="//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">
            microphone settings</a> are configured correctly.
          </p>
          <p id="info_allow" style="display:none">
            Click the "Allow" button above to enable your microphone.
          </p>
          <p id="info_denied" style="display:none">
            Permission to use microphone was denied.
          </p>
          <p id="info_blocked" style="display:none">
            Permission to use microphone is blocked. To change, go to
            chrome://settings/contentExceptions#media-stream
          </p>
          <p id="info_upgrade" style="display:none">
            Web Speech API is not supported by this browser. Upgrade to <a href=
            "//www.google.com/chrome">Chrome</a> version 25 or later.
          </p>
        </div>
        <div id="div_start">
          <button id="start_button" onclick="startButton(event)"><img alt="Start" id="start_img"
          src="./assets/mic.gif"></button>
        </div>
        <div id="results">
          <span class="final" id="final_span"></span> <span class="interim" id=
          "interim_span"></span>
        </div>
        <div id="copy">
          <button class="button" id="copy_button" onclick="copyButton()">Copy and Paste</button>
          <div id="copy_info">
            <p>
              Press Control-C to copy text.
            </p>
            <p>
              (Command-C on Mac.)
            </p>
          </div><button class="button" id="email_button" onclick="emailButton()">Create
          Email</button>
          <div id="email_info">
            <p>
              Text sent to default email application.
            </p>
            <p>
              (See chrome://settings/handlers to change.)
            </p>
          </div>
        </div>
        <div class="compact marquee" id="div_language">
          <select id="select_language" onchange="updateCountry()">
            </select>&nbsp;&nbsp; <select id="select_dialect">
            </select>
        </div>
      </div>
    </div><script src="/intl/en/chrome/assets/common/js/chrome.min.js" nonce="rjCTJjuEvbJBL74rVobCrA">
</script> <script nonce="rjCTJjuEvbJBL74rVobCrA">
var chrmMenuBar = new chrm.ui.MenuBar();
      chrmMenuBar.decorate('nav');
      var chrmLogo = new chrm.ui.Logo('logo');

      var chrmscroll = new chrm.ui.SmoothScroll('scroll');
      chrmscroll.init();



  window.___gcfg = { lang: 'en' };
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();




      var doubleTracker = new gweb.analytics.DoubleTrack('floodlight', {
          src: 2542116,
          type: 'clien612',
          cat: 'chrom0'
      });
      doubleTracker.track();
      doubleTracker.trackClass('doubletrack', true);
    </script> <script nonce="rjCTJjuEvbJBL74rVobCrA">
// If you modify this array, also update default language / dialect below.
var langs =
 [['English',       ['en-GB', 'United Kingdom'],
                     ['en-US', 'United States']],
 ['Français',        ['fr-FR']],
 ['中文',             ['cmn-Hans-CN', '普通话 (中国大陆)']]];

for (var i = 0; i < langs.length; i++) {
  select_language.options[i] = new Option(langs[i][0], i);
}
// Set default language / dialect.
select_language.selectedIndex = 0;
updateCountry();
select_dialect.selectedIndex = 1;
showInfo('info_start');

function updateCountry() {
  for (var i = select_dialect.options.length - 1; i >= 0; i--) {
    select_dialect.remove(i);
  }
  var list = langs[select_language.selectedIndex];
  for (var i = 1; i < list.length; i++) {
    select_dialect.options.add(new Option(list[i][1], list[i][0]));
  }
  select_dialect.style.visibility = list[1].length == 1 ? 'hidden' : 'visible';
}

var create_email = false;
var final_transcript = '';
var recognizing = false;
var ignore_onend;
var start_timestamp;
if (!('webkitSpeechRecognition' in window)) {
  upgrade();
} else {
  start_button.style.display = 'inline-block';
  var recognition = new webkitSpeechRecognition();
  recognition.continuous = true;
  recognition.interimResults = true;

  recognition.onstart = function() {
    recognizing = true;
    showInfo('info_speak_now');
    start_img.src = './assets/mic-animate.gif';
  };

  recognition.onerror = function(event) {
    if (event.error == 'no-speech') {
      start_img.src = './assets/mic.gif';
      showInfo('info_no_speech');
      ignore_onend = true;
    }
    if (event.error == 'audio-capture') {
      start_img.src = './assets/mic.gif';
      showInfo('info_no_microphone');
      ignore_onend = true;
    }
    if (event.error == 'not-allowed') {
      if (event.timeStamp - start_timestamp < 100) {
        showInfo('info_blocked');
      } else {
        showInfo('info_denied');
      }
      ignore_onend = true;
    }
  };

  recognition.onend = function() {
    recognizing = false;
    if (ignore_onend) {
      return;
    }
    start_img.src = '/assets/mic.gif';
    if (!final_transcript) {
      showInfo('info_start');
      return;
    }
    showInfo('');
    if (window.getSelection) {
      window.getSelection().removeAllRanges();
      var range = document.createRange();
      range.selectNode(document.getElementById('final_span'));
      window.getSelection().addRange(range);
    }
    if (create_email) {
      create_email = false;
      createEmail();
    }
  };

  recognition.onresult = function(event) {
    var interim_transcript = '';
    if (typeof(event.results) == 'undefined') {
      recognition.onend = null;
      recognition.stop();
      upgrade();
      return;
    }
    for (var i = event.resultIndex; i < event.results.length; ++i) {
      if (event.results[i].isFinal) {
        final_transcript += event.results[i][0].transcript;
      } else {
        interim_transcript += event.results[i][0].transcript;
      }
    }
    final_transcript = capitalize(final_transcript);
    final_span.innerHTML = linebreak(final_transcript);
    interim_span.innerHTML = linebreak(interim_transcript);
    if (final_transcript || interim_transcript) {
      showButtons('inline-block');
    }
  };
}

function upgrade() {
  start_button.style.visibility = 'hidden';
  showInfo('info_upgrade');
}

var two_line = /\n\n/g;
var one_line = /\n/g;
function linebreak(s) {
  return s.replace(two_line, '<p></p>').replace(one_line, '<br>');
}

var first_char = /\S/;
function capitalize(s) {
  return s.replace(first_char, function(m) { return m.toUpperCase(); });
}

function createEmail() {
  var n = final_transcript.indexOf('\n');
  if (n < 0 || n >= 80) {
    n = 40 + final_transcript.substring(40).indexOf(' ');
  }
  var subject = encodeURI(final_transcript.substring(0, n));
  var body = encodeURI(final_transcript.substring(n + 1));
  window.location.href = 'mailto:?subject=' + subject + '&body=' + body;
}

function copyButton() {
  if (recognizing) {
    recognizing = false;
    recognition.stop();
  }
  copy_button.style.display = 'none';
  copy_info.style.display = 'inline-block';
  showInfo('');
}

function emailButton() {
  if (recognizing) {
    create_email = true;
    recognizing = false;
    recognition.stop();
  } else {
    createEmail();
  }
  email_button.style.display = 'none';
  email_info.style.display = 'inline-block';
  showInfo('');
}

function startButton(event) {
  if (recognizing) {
    recognition.stop();
    return;
  }
  final_transcript = '';
  recognition.lang = select_dialect.value;
  recognition.start();
  ignore_onend = false;
  final_span.innerHTML = '';
  interim_span.innerHTML = '';
  start_img.src = './assets/mic-slash.gif';
  showInfo('info_allow');
  showButtons('none');
  start_timestamp = event.timeStamp;
}

function showInfo(s) {
  if (s) {
    for (var child = info.firstChild; child; child = child.nextSibling) {
      if (child.style) {
        child.style.display = child.id == s ? 'inline' : 'none';
      }
    }
    info.style.visibility = 'visible';
  } else {
    info.style.visibility = 'hidden';
  }
}

var current_style;
function showButtons(style) {
  if (style == current_style) {
    return;
  }
  current_style = style;
  copy_button.style.display = style;
  email_button.style.display = style;
  copy_info.style.display = 'none';
  email_info.style.display = 'none';
}
    </script>
  </body>


#+END_EXPORT

** Chit-chat 聊天区
You want to chat with Python? Do it here!
#+BEGIN_EXPORT html
<iframe src="https://trinket.io/embed/console/13c197b5a3" width="100%" height="200" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
#+END_EXPORT

** Writing Letter
If you want to write letter to python here!
#+BEGIN_EXPORT html

<iframe src="https://trinket.io/embed/python3/5c78a83738" width="100%" height="356" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>

#+END_EXPORT
